# rtmdds CMake config file
#
# This file sets the following variables:
# RTMDDS_FOUND - Always TRUE.
# RTMDDS_INCLUDE_DIRS - Directories containing the OpenRTM-aist include files.
# RTMDDS_LIBRARIES - Libraries needed to use OpenRTM-aist.
# RTMDDS_DEFINITIONS - Compiler flags for OpenRTM-aist.
# RTMDDS_VERSION - The version of OpenRTM-aist found.
# RTMDDS_VERSION_MAJOR - The major version of OpenRTM-aist found.
# RTMDDS_VERSION_MINOR - The minor version of OpenRTM-aist found.
# RTMDDS_VERSION_PATCH - The revision version of OpenRTM-aist found.
# RTMDDS_VERSION_CAN - The candidate version of OpenRTM-aist found.
#
# This module also defines one macro usable in your CMakeLists.txt files:
# RTMDDS_COMPILE_IDL_FILES(file1 file2 ...)
#   Compiles the specified IDL files, placing the generated C++ source files in
#   ${CMAKE_CURRENT_BINARY_DIR}. The source files can be found in file1_SRCS,
#   file2_SRCS, etc., and all source files for all IDL files are available in
#   ALL_IDL_SRCS.

message(STATUS "Found rtmdds-@RTMDDS_VERSION@")
set(RTMDDS_FOUND TRUE)

set(RTMDDS_INCLUDE_DIRS @CMAKE_INSTALL_PREFIX@/include
    @OPENRTM_INCLUDE_DIRS@ @DDS_INCLUDE_DIRS@)

set(RTMDDS_LIBRARIES
    debug @CMAKE_INSTALL_PREFIX@/@LIB_INSTALL_DIR@/@CMAKE_SHARED_LIBRARY_PREFIX@rtmdds@RTMDDS_DLLVERSION@@RTMDDS_DEBUG_POSTFIX@@CMAKE_SHARED_LIBRARY_SUFFIX@
    optimized @CMAKE_INSTALL_PREFIX@/@LIB_INSTALL_DIR@/@CMAKE_SHARED_LIBRARY_PREFIX@rtmdds@RTMDDS_DLLVERSION@@CMAKE_SHARED_LIBRARY_SUFFIX@
    @OPENRTM_LIBRARIES@ @DDS_LIBRARIES@)

set(RTMDDS_DEFINITIONS @OPENRTM_DEFINITIONS@ @DDS_DEFINITIONS@)

set(RTMDDS_VERSION @RTMDDS_VERSION@)
set(RTMDDS_VERSION_MAJOR @RTMDDS_VERSION_MAJOR@)
set(RTMDDS_VERSION_MINOR @RTMDDS_VERSION_MINOR@)
set(RTMDDS_VERSION_PATCH @RTMDDS_VERSION_PATCH@)
set(RTMDDS_VERSION_CAN @RTMDDS_VERSION_CAN@)

macro(IDL_OUTPUTS _idl _dir _result)
    set(${_result} ${_dir}/${_idl}C.cpp ${_dir}/${_idl}C.h ${_dir}/${_idl}C.inl
        ${_dir}/${_idl}S.cpp ${_dir}/${_idl}S.h ${_idl}/${_idl}S.inl
		${_dir}/${_idl}TypeSupportC.cpp ${_dir}/${_idl}TypeSupportC.h ${_dir}/${_idl}TypeSupportC.inl
		${_dir}/${_idl}TypeSupportS.cpp ${_dir}/${_idl}TypeSupportS.h ${_dir}/${_idl}TypeSupportS.inl
        ${_dir}/${_idl}TypeSupportImpl.cpp ${_dir}/${_idl}TypeSupportImpl.h)
endmacro(IDL_OUTPUTS)


macro(COMPILE_IDL _idl_file)
    get_filename_component(_idl ${_idl_file} NAME_WE)
    set(_idl_srcs_var ${_idl}_SRCS)
    IDL_OUTPUTS(${_idl} ${CMAKE_CURRENT_BINARY_DIR} ${_idl_srcs_var})
	configure_file(${_idl_file} ${CMAKE_CURRENT_BINARY_DIR}/${_idl}.idl COPY_ONLY)
    add_custom_command(OUTPUT ${${_idl_srcs_var}}
        COMMAND tao_idl -o ${CMAKE_CURRENT_BINARY_DIR} ${_idl}.idl
        COMMAND opendds_idl -o ${CMAKE_CURRENT_BINARY_DIR} ${_idl}.idl
        COMMAND tao_idl -o ${CMAKE_CURRENT_BINARY_DIR} -I$ENV{DDS_ROOT} ${_idl}TypeSupport.idl
		WORKING_DIRECTORY ${CURRENT_BINARY_DIR}
        DEPENDS ${_idl_file}
        COMMENT "Compiling ${_idl_file}" VERBATIM)
    set(ALL_IDL_SRCS ${_idl_srcs} ${${_idl_srcs_var}})
endmacro(COMPILE_IDL)


# Module exposed to the user
macro(RTMDDS_COMPILE_IDL_FILES)
    set(idl_srcs)
    foreach(idl ${ARGN})
        COMPILE_IDL(${idl})
    endforeach(idl)
endmacro(RTMDDS_COMPILE_IDL_FILES)

